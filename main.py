'''
 A1 A2 A3| A4 A5 A6| A7 A8 A9    4 . . |. . . |8 . 5     4 1 7 |3 6 9 |8 2 5 
 B1 B2 B3| B4 B5 B6| B7 B8 B9    . 3 . |. . . |. . .     6 3 2 |1 5 8 |9 4 7
 C1 C2 C3| C4 C5 C6| C7 C8 C9    . . . |7 . . |. . .     9 5 8 |7 2 4 |3 1 6 
---------+---------+---------    ------+------+------    ------+------+------
 D1 D2 D3| D4 D5 D6| D7 D8 D9    . 2 . |. . . |. 6 .     8 2 5 |4 3 7 |1 6 9 
 E1 E2 E3| E4 E5 E6| E7 E8 E9    . . . |. 8 . |4 . .     7 9 1 |5 8 6 |4 3 2 
 F1 F2 F3| F4 F5 F6| F7 F8 F9    . . . |. 1 . |. . .     3 4 6 |9 1 2 |7 5 8 
---------+---------+---------    ------+------+------    ------+------+------
 G1 G2 G3| G4 G5 G6| G7 G8 G9    . . . |6 . 3 |. 7 .     2 8 9 |6 4 3 |5 7 1 
 H1 H2 H3| H4 H5 H6| H7 H8 H9    5 . . |2 . . |. . .     5 7 3 |2 9 1 |6 8 4 
 I1 I2 I3| I4 I5 I6| I7 I8 I9    1 . 4 |. . . |. . .     1 6 4 |8 7 5 |2 9 3 
'''

import helper
import solver
import board


puzzles = [
"010020300004005060070000008006900070000100002030048000500006040000800106008000000",
"010020300002003040050000006004700050000100003070068000300004090000600104006000000",
"010020300002003040080000006004700030000600008070098000300004090000800104006000000",
"010020300002003040050000006004200050000100007020087000300004080000600105006000000",
"010020300002003040050000006004700050000100008070098000300004090000900804006000000",
"010020300004003020050000006002700050000100008070098000300007090000600102007000000",
"010020300002003040050000006004700050000100008070038000300005090000600104006000000",
"010020300004001050060000007005400060000100002080092000300005090000700106007000000",
"010020300003004050060000007005800060000100009080092000400005090000700106007000000",
"010020300004003050050000006005700040000100002070082000300005090000600105006000000",
"010020300002003040050000006004700050000100008070068000300004060000500104009000000",
"010020300002003040050000006004700050000100008070095000300004090000900104006000000",
"010020300004005060070000008006300070000100002030092000900006040000800106008000000",
"080070100003002090060000004009500060000700005020041000100005020000200901004000000",
"010020300002003040040000006004700050000600008070098000300005080000800104009000000",
"020010700003008060010000003008600050000900004030021000400009080000500901007000000",
"010020300003004050060000007005800060000100002080072000400005090000700104007000000",
"010020300002003040050000006007800050000100004080094000300007090000400105006000000",
"010020300004003020050000006007600050000100002060072000300008070000900108009000000",
"010020300004003050060000007005800060000900001080012000300005010000700506002000000",
"010020300004003050020000006005700020000100008070098000300005090000900205006000000",
"010020300004003020050000006007800050000100002080042000300007040000600807006000000",
"070050800005008020010000009008100050000200001090034000900002030000600107006000000",
"010020300004005060070000004006800070000900002050017000400006050000400906008000000",
"010020300004005060070000008006900080000100002090032000200006030000800105008000000",
"010020300002003040050000006004700050000100008070098000200004090000600704006000000",
"010020300002003040050000006004700050000100008070068000300004090000800104006000000",
"010020300004001050060000007005800070000900002080014000300005010000700905007000000",
"010020300004003020050000006002700050000800009070019000300002010000600805006000000",
"010020300003004050060000007008900070000100002090082000200005080000700105007000000",
"010020300004003050020000006007800040000100005080095000300007090000600107006000000",
"010020300002003040050000006004700080000100003070068000300004090000600104006000000",
"090020500004005010060000003001800060000900002080072000500001070000300901003000000",
"010020300004001050060000007005800060000100003080092000300005090000700102007000000",
"010020300002003040050000006004700050000100008020098000700004090000600104006000000",
"010020300003004050060000004005700060000100002070032000400005080000900105009000000",
"010020300004003050060000007005800040000100002080092000600005090000700105002000000",
"010020300004003050060000007005100060000800002080092000300006090000700205007000000",
"010020300004005060070000008006900030000100002090042000500006040000800106008000000",
"010020300004003050060000007005200060000100008020048000300005090000700205009000000",
"070040800009005060060000003004100070000200006020034000100008090000600401007000000",
"010020300004003050060000007005200040000800001020091000300005090000700805007000000",
"010020300004001050060000007005200060000800009020019000300005010000700805007000000",
"010020300004001050060000007005800060000900002080014000300005010000700905007000000",
"010020300004003050060000007005800060000100002070092000400005090000700105007000000",
"010020300004005060050000004006700040000100002070082000300006080000900106009000000",
"010020300004003050020000006005700080000100002070098000800005090000600105006000000",
"010020300004003050060000007005800040000100008080092000300005090000700605007000000",
"010020300004005060070000008006900040000100002090032000500006030000800906008000000",
"010020300004003050060000007005800060000100002070092000300005090000700105007000000",
"010020300002003040050000006004700050000600008070098000300004090000800104006000000",
"010020300004003050060000007005800060000100009080042000300005040000700908001000000",
"070060900006002030020000006003100040000200008050034000900003020000700105008000000",
"010020300004003050060000001005700060000800002070012000400005090000400805007000000"
]

def main():
    puzzle = "4.....8.5.3..........7......2.....6.....8.4......1.......6.3.7.5..2.....1.4......"
    # for puzzle in puzzles:
    #     puzzle = puzzle.replace('0', '.')
    #     print(len(puzzle))
    b = board.Board(puzzle)
    helper.display(b.table)
    s = solver.Solver(9, 3)
    solved_table = s.solve(b.table)

    if solved_table:
        helper.display(solved_table)
    else:
        print("no solution to this puzzle")

if __name__ == '__main__': main()